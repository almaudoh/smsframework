<?php
/**
 * @file
 * Install, update and uninstall functions for the sms_user module.
 *
 */

/**
 * Checks if the Generic User Registration settings are correctly configured
 * 
 * Implemenents hook_requirements()
 */
function sms_user_requirements($phase) {
  $config = config('sms.user.settings');
  
  $requirements = array();
  if ($phase == 'runtime') {
    $sms_user_registration_enabled = $config->get('sms_user_registration_enabled');
    $user_email_verification = $config->get('user_email_verification');
    $user_register = $config->get('user_register');
    if ($sms_user_registration_enabled) {
      $requirements['sms_user'] = array(
        'title' => t('SMS User'),
        'value' => "Enabled",
        'description' => t("You allow users to register via SMS."),
        'severity' =>  REQUIREMENT_OK,
      );
      if ($user_email_verification)  {
        $requirements['sms_user']['value'] = "Partially Working";
        $requirements['sms_user']['description'] .= t(' But you require Email verification. You should switch that off on the ' . l('account settings page', 'admin/config/people/accounts'));
        $requirements['sms_user']['severity'] =  REQUIREMENT_WARNING;
      }
      if (!$user_register) {
        $requirements['sms_user']['value'] = "Partially Working";
        $requirements['sms_user']['description'] .= t(' Users can not register so all SMS users will be blocked. You should switch visitor registration on, on the ' . l('account settings page', 'admin/config/people/accounts'));
        $requirements['sms_user']['severity'] = REQUIREMENT_ERROR;
      }
    }
  }
  return $requirements;
}

/**
 * Implements hook_install().
 */
function sms_user_install() {
}

/**
 * Implements hook_schema().
 */
function sms_user_schema() {
  $schema['sms_user'] = array(
    'fields' => array(
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'number' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 32,
      ),
      'status' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'code' => array(
        'type' => 'varchar',
        'not null' => FALSE,
        'length' => 16,
        'default' => ''
      ),
      'gateway' => array(
        'type' => 'text',
        'serialize' => TRUE,
      ),
      'sleep_enabled' => array(
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'default' => 0,
        'not null' => TRUE,
      ),
      'sleep_start_time' => array(
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'default' => 0,
        'not null' => FALSE,
      ),
      'sleep_end_time' => array(
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'default' => 0,
        'not null' => FALSE,
      ),
      // Additional sms_user_opt_out field.
      'sms_user_opt_out' => array(
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'default' => 0,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('number'),
    'indexes' => array('uid' => array('uid')),
  );

  return $schema;
}

/**
 * Update code field to NOT NULL.
 */
function sms_user_update_1000() {
  // update code field to NOT NULL
}
